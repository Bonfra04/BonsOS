#include <gui.h>
#include <syscalls.h>
#include "tga.h"

#define taskbar_margin 40
#define taskbar_height_ratio 25
#define taskbar_icon_ratio 30

typedef enum colors
{
    WHITE = 0xFFFFFFFF,
    SILVER = 0xFFC0C0C0,
    GRAY = 0xFF808080,
    BLACK = 0xFF000000,
    RED = 0xFFFF0000,
    //prima o poi lo farÃ² (giuro)
} color_t;

typedef struct taskbar_program
{
    tga_t icon;
    char name[30];   
} taskbar_program_t;

void putpixel(const window_t* window, uint64_t x, uint64_t y, uint32_t color)
{
    ((uint32_t*)window->framebuffer)[y * window->width + x] = color;
}

void circle(const window_t* window, uint64_t xc, uint64_t yc, uint64_t x, uint64_t y, uint32_t color)
{
    putpixel(window, xc+x, yc+y, color);
    putpixel(window, xc-x, yc+y, color);
    putpixel(window, xc+x, yc-y, color);
    putpixel(window, xc-x, yc-y, color);
    putpixel(window, xc+y, yc+x, color);
    putpixel(window, xc-y, yc+x, color);
    putpixel(window, xc+y, yc-x, color);
    putpixel(window, xc-y, yc-x, color);
}

void draw_circle(const window_t* window, int xc, int yc, int r, uint32_t color)
{
    int x = 0, y = r;
    int d = 3 - 2 * r;
    circle(window, xc, yc, x, y, color);
    while (y >= x)
    {
        x++;
        if (d > 0)
        {
            y--;
            d = d + 4 * (x - y) + 10;
        }
        else
            d = d + 4 * x + 6;
        circle(window, xc, yc, x, y, RED);
    }
}

void draw_image(window_t* window, tga_t* image, uint64_t _x, uint64_t _y)
{
    for(int y = 0; y < image->height; y++)
        for(int x = 0; x < image->width; x++)
        {
            uint32_t rgba = image->data[x + y * image->width];
            if(rgba & 0xFF000000)
                putpixel(window, _x + x, _y + y, rgba);
        }
}

static uint32_t color;

void event_handler(uint64_t wnd_id, uint8_t event_id)
{
    switch(event_id)
    {
        case EVENT_MOUSE_LEFT_DOWN:
            color = 0xFF00FF00;
            break;
        case EVENT_MOUSE_LEFT_UP:
            color = 0xFFFF0000;
            break;
        default:
            default_event_handler(wnd_id, event_id);
            break;
    }
}

int main()
{
    taskbar_program_t taskbar_programs[2];
    tga_load(&taskbar_programs[0].icon, "a:/assets/chrome.tga");
    // taskbar_programs[0].name = "programma0";
    tga_load(&taskbar_programs[1].icon, "a:/assets/chrome.tga");
    // taskbar_programs[1].name = "programma1"

    uint64_t width = display_width();
    uint64_t height = display_height() / 25;
    uint64_t x = 0, y = display_height() - height;
    window_t window = window_create("taskbar", width, height, x, y, WND_NO_DECORATIONS);

    color = 0xFFFFFFFF;

    do
    {
        for(int x = 0; x < width; x++)
            for(int y = 0; y < height; y++)
                ((uint32_t*)window.framebuffer)[y * width + x] = color;
    } while(cycle_events(event_handler));

    while(1)
        asm("pause");
    
    // for(int x = 0; x < width; x++)
    //     for(int y = 0; y < height; y++)
    //         ((uint32_t*)window.framebuffer)[y * width + x] = WHITE;
    
    // for(int i = 0; i < 2; i++)
    // {
    //     size_t size = taskbar_programs[0].icon.width;
    //     draw_image(&window, &taskbar_programs[0].icon, i * size + i * 2, size);
    // }
}